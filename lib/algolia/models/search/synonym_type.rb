# Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

require "date"
require "time"

module Algolia
  module Search
    class SynonymType
      SYNONYM = "synonym".freeze
      ONEWAYSYNONYM = "onewaysynonym".freeze
      ALTCORRECTION1 = "altcorrection1".freeze
      ALTCORRECTION2 = "altcorrection2".freeze
      PLACEHOLDER = "placeholder".freeze
      ONE_WAY_SYNONYM = "oneWaySynonym".freeze
      ALT_CORRECTION1 = "altCorrection1".freeze
      ALT_CORRECTION2 = "altCorrection2".freeze

      def self.all_vars
        @all_vars ||= [
          SYNONYM,
          ONEWAYSYNONYM,
          ALTCORRECTION1,
          ALTCORRECTION2,
          PLACEHOLDER,
          ONE_WAY_SYNONYM,
          ALT_CORRECTION1,
          ALT_CORRECTION2
        ].freeze
      end

      # Builds the enum from string
      # @param [String] The enum value in the form of the string
      # @return [String] The enum value
      def self.build_from_hash(value)
        new.build_from_hash(value)
      end

      # Builds the enum from string
      # @param [String] The enum value in the form of the string
      # @return [String] The enum value
      def build_from_hash(value)
        return value if SynonymType.all_vars.include?(value)
        raise "Invalid ENUM value #{value} for class #SynonymType"
      end
    end
  end
end
